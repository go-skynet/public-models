---
name: 'build container images'

on:
  push:
    branches:
      - main
    tags:
      - '*'

jobs:
  docker:
    strategy:
      fail-fast: false
      matrix:
        include:
          - model: "ggml-gpt4all-j"
          - model: "ggml-cerebras-2.7b-alpaca"
          - model: "ggml-cerebras-2.7b-q4"
          - model: "ggml-cerebras-testmodel"
    runs-on: ubuntu-latest
    steps:
      - name: Release space from worker
        run: |
          echo "Listing top largest packages"
          pkgs=$(dpkg-query -Wf '${Installed-Size}\t${Package}\t${Status}\n' | awk '$NF == "installed"{print $1 "\t" $2}' | sort -nr)
          head -n 30 <<< "${pkgs}"
          echo
          df -h
          echo
          sudo apt-get remove -y '^llvm-.*|^libllvm.*' || true
          sudo apt-get remove --auto-remove android-sdk-platform-tools || true
          sudo apt-get purge --auto-remove android-sdk-platform-tools || true
          sudo rm -rf /usr/local/lib/android
          sudo apt-get remove -y '^dotnet-.*|^aspnetcore-.*' || true
          sudo rm -rf /usr/share/dotnet
          sudo apt-get remove -y '^mono-.*' || true
          sudo apt-get remove -y '^ghc-.*' || true
          sudo apt-get remove -y '.*jdk.*|.*jre.*' || true
          sudo apt-get remove -y 'php.*' || true
          sudo apt-get remove -y hhvm powershell firefox monodoc-manual msbuild || true
          sudo apt-get remove -y '^google-.*' || true
          sudo apt-get remove -y azure-cli || true
          sudo apt-get remove -y '^mongo.*-.*|^postgresql-.*|^mysql-.*|^mssql-.*' || true
          sudo apt-get remove -y '^gfortran-.*' || true
          sudo apt-get remove -y microsoft-edge-stable humanity-icon-theme buildah skopeo podman vim-runtime firefox gcc-12 cpp-12 powershell gcc-11 gcc-10 g++-9 gcc-9 g++-11 cpp-9 g++-10 r-base-core gh snapd || true
          sudo apt-get autoremove -y
          sudo apt-get clean
          echo
          echo "Listing top largest packages"
          pkgs=$(dpkg-query -Wf '${Installed-Size}\t${Package}\t${Status}\n' | awk '$NF == "installed"{print $1 "\t" $2}' | sort -nr)
          head -n 30 <<< "${pkgs}"
          echo
          sudo rm -rfv build || true
          sudo rm -rf /usr/share/dotnet || true
          sudo rm -rf /opt/ghc || true
          sudo rm -rf "/usr/local/share/boost" || true
          sudo rm -rf "$AGENT_TOOLSDIRECTORY" || true
          df -h
      - name: Checkout
        uses: actions/checkout@v3
      - name: Prepare
        run: |
          pip install sentencepiece
          git clone https://gist.github.com/eiz/828bddec6162a023114ce19146cb2b82
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: Find version tag
        id: tag
        run: |
          DOCKER_IMAGE=quay.io/go-skynet/models
          VERSION=${{ matrix.model }}-main
          SHORTREF=${GITHUB_SHA::8}
          # If this is git tag, use the tag name as a docker tag
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${{ matrix.model }}-${GITHUB_REF#refs/tags/}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"

          # Set output parameters.
          echo ::set-output name=image::${TAGS}
      - name: Build
        run: |
            export IMAGE=${{ steps.tag.outputs.image }}
            bash ${{ matrix.model }}/build.sh
            docker push $IMAGE
